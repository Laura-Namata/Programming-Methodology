checks<-function(x){
if(x>0){
print("x is a positive number")
}else{
print("x is a negative number")
}
}
age<-23
if(age>=23){
print("eligible to vote")
}else{
print("not eligible to vote")
}
voters(23)
sum_two_numbers<-function(a,b){
sums=a+b
return(sums)
}
sum_two_numbers(5,6)
even_checker(sum_two_numbers(5,6))
even_checker<-function(x){
if(x%%2==0){
return(TRUE)
}else{
return(FALSE)
}
}
even_checker(15)
even_checker(11)
even_checker(sum_two_numbers(3,7))
make_sin(64075429)
make_sin(00000000)
make_sin<-function(x){
#obtain the individual digits
first=as.integer(x*10^-7)
second=(as.integer(x*10^-6))%%10
third=(as.integer(x*10^-5))%%10
fourth=(as.integer(x*10^-4))%%10
fifth=(as.integer(x*10^-3))%%10
sixth=(as.integer(x*10^-2))%%10
seventh=(as.integer(x*10^-1))%%10
eighth=(as.integer(x*10^-0))%%10
#sum the odd number positioned digits
sum_of_odds=first+third+fifth+seventh
#get the double of even positioned digits
d_second=second*2
d_fourth=fourth*2
d_sixth=sixth*2
d_eighth=eighth*2
#get the sum of the digits of the sums of the even positioned digits
sum_of_evens=as.integer(d_second/10)+d_second%%10 +
as.integer(d_fourth/10)+d_fourth%%10+
as.integer(d_sixth/10)+d_sixth%%10+
as.integer(d_eighth/10)+d_eighth%%10
#sum of all evens and odds
sums = sum_of_evens+sum_of_odds
#get the last digit of resultant sum
last_digit = (10-( sums %%10))%%10
sin_num =x*10 + last_digit
return(sin_num)
}
make_sin(00000000)
format(make_sin(00000000),scientific=FALSE)
format(make_sin(99999999),scientific=FALSE)
format(make_sin(26600000),scientific=FALSE)
format(make_sin(64075429),scientific=FALSE)
make_sin <- function(x){
first=as.integer(x=10^-7)
second=(as.integer(x=10^-6))%%10
third=(as.integer(x=10^-5))%%10
fourth=(as.integer(x=10^-4))%%10
fifth=(as.integer(x=10^-3))%%10
sixth=(as.integer(x=10^-2))%%10
seventh=(as.integer(x=10^-1))%%10
eigth=(as.integer(x=10^-0))%%10
#sums the odd number digits
sum_of_odds = first + third + fifth + seventh
#get double of even placed digits
d_second=second*2
d_fourth=fourth*2
d_sixth=sixth*2
d_eigth=eigth*2
#get sum of digits of resultant numbers
sum_of_evens= as.integer(d_second/10) + d_second%%10+
as.integer(d_fourth/10) + d_fourth%%10+
as.integer(d_sixth/10) + d_sixth%%10+
as.integer(d_eigth/10) + d_eigth%%10
#sum of all evens and odds
sums= sum_of_odds + sum_of_evens
#get last_digit of resultant sum
last_digit = (10-(sums%%10))%%10
sin_num=x*10 +last_digit
return(sin_num)
}
make_sin(64075429)
format(make_sin(64075429),scientific= FALSE)
format(make_sin(26600000),scientific= FALSE)
format(make_sin(99999999),scientific= FALSE)
format(make_sin(00000000),scientific= FALSE)
composite_2_to_d <- function(n, d){
# creating an empty vector
divisors <- c()
# iterate through the values 2:d
for (i in 2:d){
if (n%%i==0){
divisors = c(divisors, i)
}
}
if (length(divisors)==0){
print(FALSE)
}else{
print(TRUE)
}
}
composite_2_to_d(11,2)
1,2,3,4,5
prime <- function(n){
divisors <- c()
for (i in 1:(n)){
if (n%%i==0){
divisors = c(divisors, i)
}
}
if (length(divisors)==2){
print(TRUE)
}else{
FALSE
}
}
prime(13)
source("C:/Users/Lenovo/Downloads/Regression (1).r")
